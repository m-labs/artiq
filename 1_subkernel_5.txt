NoneType __modinit__() { ; type: ()->NoneType delay('a)
entry: ; predecessors: 
; <synthesized>:1 [1;32m`<function DMAPulses.simple_self_too at 0x7f5e62752dd0>`[0m(`<artiq_run_test_subkernel.DMAPulses object at 0x7f5e62b723b0>`)
  %UNN.7 = (self:<instance artiq_run_test_subkernel.DMAPulses>)->NoneType delay(999999999 mu) quote(<function DMAPulses.simple_self_too at 0x7f5e62752dd0>)
; <synthesized>:1 `<function DMAPulses.simple_self_too at 0x7f5e62752dd0>`([1;32m`<artiq_run_test_subkernel.DMAPulses object at 0x7f5e62b723b0>`[0m)
  %UNN.8 = <instance artiq_run_test_subkernel.DMAPulses {
		__objectid__: numpy.int32,
		core: <instance artiq.coredevice.core.Core>,
		led1: <instance artiq.coredevice.ttl.TTLOut>,
		led3: <instance artiq.coredevice.ttl.TTLOut>
	}> quote(<artiq_run_test_subkernel.DMAPulses object at 0x7f5e62b723b0>)
; <synthesized>
  branch label %delay.head
delay.head: ; predecessors: entry
; <synthesized>:1 [1;32m`<function DMAPulses.simple_self_too at 0x7f5e62752dd0>`(`<artiq_run_test_subkernel.DMAPulses object at 0x7f5e62b723b0>`)[0m
  %UNN.10 = NoneType call (self:<instance artiq_run_test_subkernel.DMAPulses>)->NoneType delay(999999999 mu) %UNN.7, <instance artiq_run_test_subkernel.DMAPulses> %UNN.8
  delay(999999999) decomp NoneType %UNN.10, to label %delay.tail
delay.tail: ; predecessors: delay.head
  return NoneType None
}
NoneType _Z50artiq_run_test_subkernel.DMAPulses.simple_self_toozz(environment(...) %ARG.ENV, <instance artiq_run_test_subkernel.DMAPulses> %ARG.self) { ; type: (self:<instance artiq_run_test_subkernel.DMAPulses>)->NoneType delay(999999999 mu)
entry: ; predecessors: 
; test_subkernel.py:31         [1;32mself.core[0m.break_realtime()
  %LOC.self.FLD.core = <instance artiq.coredevice.core.Core {
		__objectid__: numpy.int32
	}> getattr('core') <instance artiq_run_test_subkernel.DMAPulses> %ARG.self
; test_subkernel.py:32         [1;32mself.led3[0m.pulse(1000*ms)
  %LOC.self.4.FLD.led3 = <instance artiq.coredevice.ttl.TTLOut {
		__objectid__: numpy.int32,
		target_o: numpy.int32
	}> getattr('led3') <instance artiq_run_test_subkernel.DMAPulses> %ARG.self
; test_subkernel.py:30     [1;32mdef[0m simple_self_too(self) -> TNone:
  %ENV = environment($outer=environment, self=<instance artiq_run_test_subkernel.DMAPulses>) alloc
  setlocal('$outer') %ENV, environment(...) %ARG.ENV
  setlocal('self') %ENV, <instance artiq_run_test_subkernel.DMAPulses> %ARG.self
; test_subkernel.py:31         [1;32mself.core.break_realtime[0m()
  %"LOC.self.FLD.core.FLD.break_realtime" = method(fn=(self:<instance artiq.coredevice.core.Core>)->NoneType, self=<instance artiq.coredevice.core.Core>) getattr('break_realtime') <instance artiq.coredevice.core.Core> %LOC.self.FLD.core
; test_subkernel.py:31         [1;32mself.core.break_realtime()[0m
  %"LOC.self.FLD.core.FLD.break_realtime.ENV" = (self:<instance artiq.coredevice.core.Core>)->NoneType getattr('__func__') method(fn=(self:<instance artiq.coredevice.core.Core>)->NoneType, self=<instance artiq.coredevice.core.Core>) %"LOC.self.FLD.core.FLD.break_realtime"
  %"LOC.self.FLD.core.FLD.break_realtime.SLF" = <instance artiq.coredevice.core.Core> getattr('__self__') method(fn=(self:<instance artiq.coredevice.core.Core>)->NoneType, self=<instance artiq.coredevice.core.Core>) %"LOC.self.FLD.core.FLD.break_realtime"
  call (self:<instance artiq.coredevice.core.Core>)->NoneType %"LOC.self.FLD.core.FLD.break_realtime.ENV", <instance artiq.coredevice.core.Core> %"LOC.self.FLD.core.FLD.break_realtime.SLF"
; test_subkernel.py:32         [1;32mself.led3.pulse[0m(1000*ms)
  %LOC.self.4.FLD.led3.FLD.pulse = method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>, duration:float)->NoneType delay(s->mu(duration) mu), self=<instance artiq.coredevice.ttl.TTLOut>) getattr('pulse') <instance artiq.coredevice.ttl.TTLOut> %LOC.self.4.FLD.led3
; test_subkernel.py:32         self.led3.pulse([1;32m1000[0m*ms)
  %1000.float = float coerce numpy.int32 1000
; test_subkernel.py:32         self.led3.pulse([1;32m1000*ms[0m)
  %UNN.5 = float arith(Mult) float %1000.float, float 0.001
; <synthesized>
  branch label %delay.head
delay.head: ; predecessors: entry
; test_subkernel.py:32         [1;32mself.led3.pulse(1000*ms)[0m
  %LOC.self.4.FLD.led3.FLD.pulse.ENV = (self:<instance artiq.coredevice.ttl.TTLOut>, duration:float)->NoneType delay(s->mu(duration) mu) getattr('__func__') method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>, duration:float)->NoneType delay(s->mu(duration) mu), self=<instance artiq.coredevice.ttl.TTLOut>) %LOC.self.4.FLD.led3.FLD.pulse
  %LOC.self.4.FLD.led3.FLD.pulse.SLF = <instance artiq.coredevice.ttl.TTLOut> getattr('__self__') method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>, duration:float)->NoneType delay(s->mu(duration) mu), self=<instance artiq.coredevice.ttl.TTLOut>) %LOC.self.4.FLD.led3.FLD.pulse
  %UNN.7 = NoneType call (self:<instance artiq.coredevice.ttl.TTLOut>, duration:float)->NoneType delay(s->mu(duration) mu) %LOC.self.4.FLD.led3.FLD.pulse.ENV, <instance artiq.coredevice.ttl.TTLOut> %LOC.self.4.FLD.led3.FLD.pulse.SLF, float %UNN.5
  delay(s->mu(1000 * 0.001)) decomp NoneType %UNN.7, to label %delay.tail
delay.tail: ; predecessors: delay.head
  return NoneType None
}
NoneType _Z41artiq.coredevice.core.Core.break_realtimeI26artiq.coredevice.core.CoreEzz(environment(...) %ARG.ENV, <instance artiq.coredevice.core.Core> %ARG.self) { ; type: (self:<instance artiq.coredevice.core.Core>)->NoneType
entry: ; predecessors: 
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:329     [1;32mdef[0m break_realtime(self):
  %ENV = environment($outer=environment, min_now=numpy.int64, self=<instance artiq.coredevice.core.Core>) alloc
  setlocal('$outer') %ENV, environment(...) %ARG.ENV
  setlocal('self') %ENV, <instance artiq.coredevice.core.Core> %ARG.self
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:330         [1;32m"""Set the time cursor after the current value of the hardware RTIO
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:330         counter plus a margin of 125000 machine units.
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:330 
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:330         If the time cursor is already after that position, this function
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:330         does nothing."""[0m
  builtin(nop)
; <synthesized>:1 [1;32m`<function rtio_get_counter at 0x7f5e627508b0>`[0m
  %UNN.3 = [ffi 'rtio_get_counter']()->numpy.int64 quote(<function rtio_get_counter at 0x7f5e627508b0>)
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:335         min_now = [1;32mrtio_get_counter()[0m + 125000
  %UNN.4 = numpy.int64 call [ffi 'rtio_get_counter']()->numpy.int64 %UNN.3
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:335         min_now = rtio_get_counter() + [1;32m125000[0m
  %125000.int = numpy.int64 coerce numpy.int32 125000
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:335         min_now = [1;32mrtio_get_counter() + 125000[0m
  %UNN.5 = numpy.int64 arith(Add) numpy.int64 %UNN.4, numpy.int64 %125000.int
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:335         [1;32mmin_now[0m = rtio_get_counter() + 125000
  setlocal('min_now') %ENV, numpy.int64 %UNN.5
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:336         if [1;32mnow_mu()[0m < min_now:
  %"BLT.now_mu" = numpy.int64 builtin(now_mu)
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:336         if [1;32mnow_mu() < min_now[0m:
  %UNN.7 = bool compare(Lt) numpy.int64 %"BLT.now_mu", numpy.int64 %UNN.5
; <synthesized>
  branch label %compare.seq
compare.seq: ; predecessors: entry
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:336         if [1;32mnow_mu() < min_now[0m:
  %UNN.8 = bool phi [%entry => bool %UNN.7]
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:336         [1;32mif[0m now_mu() < min_now:
  branchif bool %UNN.8, label %if.body, label %if.tail
if.body: ; predecessors: compare.seq
; /home/spaqin/m-labs/artiq/artiq/coredevice/core.py:337             [1;32mat_mu(min_now)[0m
  builtin(at_mu) numpy.int64 %UNN.5
; <synthesized>
  branch label %if.tail
if.tail: ; predecessors: compare.seq, if.body
  return NoneType None
}
NoneType _Z33artiq.coredevice.ttl.TTLOut.pulseI27artiq.coredevice.ttl.TTLOutEzz(environment(...) %ARG.ENV, <instance artiq.coredevice.ttl.TTLOut> %ARG.self, float %ARG.duration) { ; type: (self:<instance artiq.coredevice.ttl.TTLOut>, duration:float)->NoneType delay(s->mu(duration) mu)
entry: ; predecessors: 
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:78     [1;32mdef[0m pulse(self, duration):
  %ENV = environment($outer=environment, duration=float, self=<instance artiq.coredevice.ttl.TTLOut>) alloc
  setlocal('$outer') %ENV, environment(...) %ARG.ENV
  setlocal('self') %ENV, <instance artiq.coredevice.ttl.TTLOut> %ARG.self
  setlocal('duration') %ENV, float %ARG.duration
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:79         [1;32m"""Pulse the output high for the specified duration
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:79         (in seconds).
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:79 
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:79         The time cursor is advanced by the specified duration."""[0m
  builtin(nop)
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:83         [1;32mself.on[0m()
  %LOC.self.FLD.on = method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>)->NoneType, self=<instance artiq.coredevice.ttl.TTLOut>) getattr('on') <instance artiq.coredevice.ttl.TTLOut> %ARG.self
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:83         [1;32mself.on()[0m
  %LOC.self.FLD.on.ENV = (self:<instance artiq.coredevice.ttl.TTLOut>)->NoneType getattr('__func__') method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>)->NoneType, self=<instance artiq.coredevice.ttl.TTLOut>) %LOC.self.FLD.on
  %LOC.self.FLD.on.SLF = <instance artiq.coredevice.ttl.TTLOut> getattr('__self__') method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>)->NoneType, self=<instance artiq.coredevice.ttl.TTLOut>) %LOC.self.FLD.on
  call (self:<instance artiq.coredevice.ttl.TTLOut>)->NoneType %LOC.self.FLD.on.ENV, <instance artiq.coredevice.ttl.TTLOut> %LOC.self.FLD.on.SLF
; <synthesized>
  branch label %delay.head
delay.head: ; predecessors: entry
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:84         [1;32mdelay(duration)[0m
  %UNN.6 = float arith(Div) float %ARG.duration, float 1e-09
  %BLT.round = numpy.int64 builtin(round) float %UNN.6
  %"BLT.delay_mu" = NoneType builtin(delay_mu) numpy.int64 %BLT.round
  delay(s->mu(duration)) decomp NoneType %"BLT.delay_mu", to label %delay.tail
delay.tail: ; predecessors: delay.head
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:85         [1;32mself.off[0m()
  %LOC.self.8.FLD.off = method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>)->NoneType, self=<instance artiq.coredevice.ttl.TTLOut>) getattr('off') <instance artiq.coredevice.ttl.TTLOut> %ARG.self
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:85         [1;32mself.off()[0m
  %LOC.self.8.FLD.off.ENV = (self:<instance artiq.coredevice.ttl.TTLOut>)->NoneType getattr('__func__') method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>)->NoneType, self=<instance artiq.coredevice.ttl.TTLOut>) %LOC.self.8.FLD.off
  %LOC.self.8.FLD.off.SLF = <instance artiq.coredevice.ttl.TTLOut> getattr('__self__') method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>)->NoneType, self=<instance artiq.coredevice.ttl.TTLOut>) %LOC.self.8.FLD.off
  call (self:<instance artiq.coredevice.ttl.TTLOut>)->NoneType %LOC.self.8.FLD.off.ENV, <instance artiq.coredevice.ttl.TTLOut> %LOC.self.8.FLD.off.SLF
; <synthesized>
  return NoneType None
}
NoneType _Z30artiq.coredevice.ttl.TTLOut.onI27artiq.coredevice.ttl.TTLOutEzz(environment(...) %ARG.ENV, <instance artiq.coredevice.ttl.TTLOut> %ARG.self) { ; type: (self:<instance artiq.coredevice.ttl.TTLOut>)->NoneType
entry: ; predecessors: 
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:52     [1;32mdef[0m on(self):
  %ENV = environment($outer=environment, self=<instance artiq.coredevice.ttl.TTLOut>) alloc
  setlocal('$outer') %ENV, environment(...) %ARG.ENV
  setlocal('self') %ENV, <instance artiq.coredevice.ttl.TTLOut> %ARG.self
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:53         [1;32m"""Set the output to a logic high state at the current position
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:53         of the time cursor.
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:53 
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:53         The time cursor is not modified by this function."""[0m
  builtin(nop)
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:57         [1;32mself.set_o[0m(True)
  %"LOC.self.FLD.set_o" = method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>, o:bool)->NoneType, self=<instance artiq.coredevice.ttl.TTLOut>) getattr('set_o') <instance artiq.coredevice.ttl.TTLOut> %ARG.self
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:57         [1;32mself.set_o(True)[0m
  %"LOC.self.FLD.set_o.ENV" = (self:<instance artiq.coredevice.ttl.TTLOut>, o:bool)->NoneType getattr('__func__') method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>, o:bool)->NoneType, self=<instance artiq.coredevice.ttl.TTLOut>) %"LOC.self.FLD.set_o"
  %"LOC.self.FLD.set_o.SLF" = <instance artiq.coredevice.ttl.TTLOut> getattr('__self__') method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>, o:bool)->NoneType, self=<instance artiq.coredevice.ttl.TTLOut>) %"LOC.self.FLD.set_o"
  call (self:<instance artiq.coredevice.ttl.TTLOut>, o:bool)->NoneType %"LOC.self.FLD.set_o.ENV", <instance artiq.coredevice.ttl.TTLOut> %"LOC.self.FLD.set_o.SLF", bool True
; <synthesized>
  return NoneType None
}
NoneType _Z31artiq.coredevice.ttl.TTLOut.offI27artiq.coredevice.ttl.TTLOutEzz(environment(...) %ARG.ENV, <instance artiq.coredevice.ttl.TTLOut> %ARG.self) { ; type: (self:<instance artiq.coredevice.ttl.TTLOut>)->NoneType
entry: ; predecessors: 
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:60     [1;32mdef[0m off(self):
  %ENV = environment($outer=environment, self=<instance artiq.coredevice.ttl.TTLOut>) alloc
  setlocal('$outer') %ENV, environment(...) %ARG.ENV
  setlocal('self') %ENV, <instance artiq.coredevice.ttl.TTLOut> %ARG.self
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:61         [1;32m"""Set the output to a logic low state at the current position
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:61         of the time cursor.
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:61 
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:61         The time cursor is not modified by this function."""[0m
  builtin(nop)
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:65         [1;32mself.set_o[0m(False)
  %"LOC.self.FLD.set_o" = method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>, o:bool)->NoneType, self=<instance artiq.coredevice.ttl.TTLOut>) getattr('set_o') <instance artiq.coredevice.ttl.TTLOut> %ARG.self
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:65         [1;32mself.set_o(False)[0m
  %"LOC.self.FLD.set_o.ENV" = (self:<instance artiq.coredevice.ttl.TTLOut>, o:bool)->NoneType getattr('__func__') method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>, o:bool)->NoneType, self=<instance artiq.coredevice.ttl.TTLOut>) %"LOC.self.FLD.set_o"
  %"LOC.self.FLD.set_o.SLF" = <instance artiq.coredevice.ttl.TTLOut> getattr('__self__') method(fn=(self:<instance artiq.coredevice.ttl.TTLOut>, o:bool)->NoneType, self=<instance artiq.coredevice.ttl.TTLOut>) %"LOC.self.FLD.set_o"
  call (self:<instance artiq.coredevice.ttl.TTLOut>, o:bool)->NoneType %"LOC.self.FLD.set_o.ENV", <instance artiq.coredevice.ttl.TTLOut> %"LOC.self.FLD.set_o.SLF", bool False
; <synthesized>
  return NoneType None
}
NoneType _Z33artiq.coredevice.ttl.TTLOut.set_oI27artiq.coredevice.ttl.TTLOutEzz(environment(...) %ARG.ENV, <instance artiq.coredevice.ttl.TTLOut> %ARG.self, bool %ARG.o) { ; type: (self:<instance artiq.coredevice.ttl.TTLOut>, o:bool)->NoneType
entry: ; predecessors: 
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:49         rtio_output([1;32mself.target_o[0m, 1 if o else 0)
  %"LOC.self.FLD.target_o" = numpy.int32 getattr('target_o') <instance artiq.coredevice.ttl.TTLOut> %ARG.self
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:48     [1;32mdef[0m set_o(self, o):
  %ENV = environment($outer=environment, o=bool, self=<instance artiq.coredevice.ttl.TTLOut>) alloc
  setlocal('$outer') %ENV, environment(...) %ARG.ENV
  setlocal('self') %ENV, <instance artiq.coredevice.ttl.TTLOut> %ARG.self
  setlocal('o') %ENV, bool %ARG.o
; <synthesized>:1 [1;32m`<function rtio_output at 0x7f5e62753400>`[0m
  %UNN.4 = [ffi 'rtio_output'](target:numpy.int32, data:numpy.int32)->NoneType quote(<function rtio_output at 0x7f5e62753400>)
; <synthesized>
  branchif bool %ARG.o, label %ifexp.body, label %ifexp.else
ifexp.else: ; predecessors: entry
  branch label %ifexp.tail
ifexp.body: ; predecessors: entry
  branch label %ifexp.tail
ifexp.tail: ; predecessors: ifexp.body, ifexp.else
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:49         rtio_output(self.target_o, [1;32m1 if o else 0[0m)
  %UNN.8 = numpy.int32 phi [%ifexp.body => numpy.int32 1, %ifexp.else => numpy.int32 0]
; /home/spaqin/m-labs/artiq/artiq/coredevice/ttl.py:49         [1;32mrtio_output(self.target_o, 1 if o else 0)[0m
  call [ffi 'rtio_output'](target:numpy.int32, data:numpy.int32)->NoneType %UNN.4, numpy.int32 %"LOC.self.FLD.target_o", numpy.int32 %UNN.8
; <synthesized>
  return NoneType None
}